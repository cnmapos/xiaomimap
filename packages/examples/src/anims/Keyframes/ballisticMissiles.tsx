import React, { useEffect, useRef } from 'react';
import MapContainer from '../../components/map-container';
import { Button } from 'antd';
import {
  AnimationController,
  AnimationTrack,
  createPointRoamingSlerp,
  parabolaInterpolate,
  PointRoamingAnimationTarget,
} from '@hztx/animations';
import {
  Cartesian3,
  Color,
  DirectionalLight,
  HeadingPitchRoll,
  Math,
  PolylineGlowMaterialProperty,
  SceneMode,
  Transforms,
  UrlTemplateImageryProvider,
  Viewer,
} from 'cesium';
import { HZViewer } from '@hztx/core';
import PathGeoJSONData from '../assets/pathForBike.json';

const HEIGHT = 9000;

function Trace() {
  const aniCtr = new AnimationController();
  const context = useRef<{ viewer: Viewer }>({
    viewer: null,
  });

  let animationFrameId: number;

  useEffect(() => {
    const hz = new HZViewer('map', { sceneMode: SceneMode.SCENE3D });
    const { viewer }: { viewer: Viewer } = hz;
    context.current.viewer = viewer;

    viewer.resolutionScale = 2;

    const chinaTiles = new UrlTemplateImageryProvider({
      url: 'https://tiles2.geovisearth.com/base/v1/img/{z}/{x}/{y}?format=webp&tmsIds=w&token=fa74f216c7265ac713a224dcd0a4d0f20e27b61051ed729b587111b4c410528b', // 替换为中国行政区级别瓦片的URL
    });
    viewer.imageryLayers.addImageryProvider(chinaTiles);
    const topoTiles = new UrlTemplateImageryProvider({
      url: 'https://tiles1.geovisearth.com/base/v1/cia/{z}/{x}/{y}?format=webp&tmsIds=w&token=fa74f216c7265ac713a224dcd0a4d0f20e27b61051ed729b587111b4c410528b', // 替换为中国行政区级别瓦片的URL
    });
    viewer.imageryLayers.addImageryProvider(topoTiles);

    viewer.scene.light = new DirectionalLight({
      direction: new Cartesian3(1.0, -1.0, -1.0), // 光源方向
      color: Color.WHITE, // 光源颜色
      intensity: 2.0, // 光源强度
    });

    // 启用环境光遮蔽（AO）
    viewer.scene.postProcessStages.fxaa.enabled = true;
    viewer.scene.postProcessStages.ambientOcclusion.enabled = true;

    const start = [145.6, 15.0, 0];
    const end = [129.9, 32.8, HEIGHT];
    const wayPoints = [[130.8, 33.9, HEIGHT]];
    //[130.43837494772174 , 33.57647134472288] 小仓市
    // [129.75774189303715 , 32.592941189034256] 长崎市
    // 途径位置
    /**
     * [2.280676991265219,0.5828409021876386,40.7930355611858],[2.2795163584841136,0.5835867850342943,75.404033476654],[2.278555845296461,0.5845555190106474,112.34702611184521],[2.2777875623580317,0.5857180639645218,42.86384948652313],[2.2773765184243078,0.5869286981835962,88.03863472128057],[2.276465033850543,0.5876390058293202,-9.449048906007],[2.2756624130758074,0.5871465960190703,-6.556231445604565],[2.274855625064425,0.5863784536117209,1.923439739518469],[2.2744953146293994,0.5854648969426753,120.99008095867092],[2.27446533028903,0.584736573548037,188.71076787006876],[2.2750180503089634,0.5844178477771022,123.83611025001558],[2.2757384321100584,0.5844966037298978,77.09261890016523],[2.2764169799268683,0.5847788789105294,47.728640889127504],[2.2769495529135266,0.5854681765624894,30.70907073951217],[2.2770068519318682,0.5864628314673682,52.598903787716935],[2.276399077016596,0.5871424636368049,-6.474849215794719],[2.2754294498789562,0.5876761812512186,-12.96980324589297],[2.2744520141687987,0.5868564873015669,-5.760170642816565],[2.27372752170804,0.5854135430525182,160.32468159537495],[2.2738586491913173,0.5839728413150657,593.7223125908495],[2.2737201626109025,0.5822854455100047,258.17611795555024],[2.2716578203512716,0.5794826130980807,134.41920677157276],[2.270659510728834,0.5776278304930426,159.5483511687475],[2.2696780141866966,0.5757780312893509,130.77511048620866],[2.26772624861149,0.5726606198302642,-40.57502926792832],[2.2663538221443265,0.5717498512376963,-65.62329059607639],[2.265292646461873,0.5712674218133885,-72.6533374380327],[2.264089476290734,0.570551522005468,-78.29269882416453],[2.2635627222892203,0.5696943776249961,-112.93347969082402],[2.2635955148118305,0.5686822083951938,-129.2290304167432],[2.2643409173336355,0.567735283627753,-117.68796629491263],[2.2653357620692858,0.567764124450638,-84.52695314917565],[2.2662304574969423,0.568590943502169,-43.03343541370623],[2.2666014178453513,0.5695662049648751,-63.310714993354686],[2.2666799815440184,0.5707946724846669,-77.83833538882318],[2.2666799815440184,0.5707946724846669,-77.83833538882318],[2.2666799815440184,0.5707946724846669,-77.83833538882318]
     */
    // 127.69772816393342 , 26.14176359048973 冲绳岛
    // 剧本：1.从琉球群岛出发，到达小仓市盘旋一圈，继续往长崎市出发，到达长崎市后投掷原子弹，最后迫降冲绳岛
    console.log(
      [
        [2.280676991265219, 0.5828409021876386, 40.7930355611858],
        [2.2795163584841136, 0.5835867850342943, 75.404033476654],
        [2.278555845296461, 0.5845555190106474, 112.34702611184521],
        [2.2777875623580317, 0.5857180639645218, 42.86384948652313],
        [2.2773765184243078, 0.5869286981835962, 88.03863472128057],
        [2.276465033850543, 0.5876390058293202, -9.449048906007],
        [2.2756624130758074, 0.5871465960190703, -6.556231445604565],
        [2.274855625064425, 0.5863784536117209, 1.923439739518469],
        [2.2744953146293994, 0.5854648969426753, 120.99008095867092],
        [2.27446533028903, 0.584736573548037, 188.71076787006876],
        [2.2750180503089634, 0.5844178477771022, 123.83611025001558],
        [2.2757384321100584, 0.5844966037298978, 77.09261890016523],
        [2.2764169799268683, 0.5847788789105294, 47.728640889127504],
        [2.2769495529135266, 0.5854681765624894, 30.70907073951217],
        [2.2770068519318682, 0.5864628314673682, 52.598903787716935],
        [2.276399077016596, 0.5871424636368049, -6.474849215794719],
        [2.2754294498789562, 0.5876761812512186, -12.96980324589297],
        [2.2744520141687987, 0.5868564873015669, -5.760170642816565],
        [2.27372752170804, 0.5854135430525182, 160.32468159537495],
        [2.2738586491913173, 0.5839728413150657, 593.7223125908495],
        [2.2737201626109025, 0.5822854455100047, 258.17611795555024],
        [2.2716578203512716, 0.5794826130980807, 134.41920677157276],
        [2.270659510728834, 0.5776278304930426, 159.5483511687475],
        [2.2696780141866966, 0.5757780312893509, 130.77511048620866],
        [2.26772624861149, 0.5726606198302642, -40.57502926792832],
        [2.2663538221443265, 0.5717498512376963, -65.62329059607639],
        [2.265292646461873, 0.5712674218133885, -72.6533374380327],
        [2.264089476290734, 0.570551522005468, -78.29269882416453],
        [2.2635627222892203, 0.5696943776249961, -112.93347969082402],
        [2.2635955148118305, 0.5686822083951938, -129.2290304167432],
        [2.2643409173336355, 0.567735283627753, -117.68796629491263],
        [2.2653357620692858, 0.567764124450638, -84.52695314917565],
        [2.2662304574969423, 0.568590943502169, -43.03343541370623],
        [2.2666014178453513, 0.5695662049648751, -63.310714993354686],
        [2.2666799815440184, 0.5707946724846669, -77.83833538882318],
        [2.2666799815440184, 0.5707946724846669, -77.83833538882318],
        [2.2666799815440184, 0.5707946724846669, -77.83833538882318],
      ].map((p) => [Math.toDegrees(p[0]), Math.toDegrees(p[1])])
    );

    const modelEntity = context.current.viewer.entities.add({
      position: Cartesian3.fromDegrees(...start),
      show: true,
      model: {
        uri: 'assets/models/battleplane3.glb', // 替换为实际模型路径
        // minimumPixelSize: 256 * 16,
        // maximumScale: 1280,
        scale: 50000,
        imageBasedLightingFactor: new Cartesian3(1.0, 1.0, 1.0),
        lightColor: Color.WHITE,
      },
      orientation: Transforms.headingPitchRollQuaternion(
        Cartesian3.fromDegrees(...start),
        new HeadingPitchRoll(Math.PI, 0, 0)
      ),
    });
    const lineEntity = viewer.entities.add({
      name: 'Path',
      show: false,
      polyline: {
        // positions: Cartesian3.fromDegreesArrayHeights(coordinates.flat()),
        positions: [],
        width: 20,
        material: new PolylineGlowMaterialProperty({
          glowPower: 0.2,
          taperPower: 0.25,
          color: Color.fromCssColorString('#FF0000'),
        }),
        //箭头
        // material: new PolylineArrowMaterialProperty(Color.ORANGE),
        // clampToGround: true,
      },
    });
    viewer.trackedEntity = modelEntity;

    const wayPointsFromXCToCQ = [
      [130.67316603209196, 33.39432382294892],
      [130.6066666721701, 33.437059762073496],
      [130.55163332035096, 33.492564130389454],
      [130.50761395050705, 33.559173049740686],
      [130.4840628679102, 33.62853728102777],
      [130.4318386487422, 33.669234911283624],
      [130.38585186580033, 33.64102190736547],
      [130.33962631778638, 33.597010589359336],
      [130.31898205054486, 33.54466764787699],
      [130.31726407439024, 33.502937791243575],
      [130.34893259878478, 33.48467614974695],
      [130.39020743562557, 33.48918853345367],
      [130.4290853617266, 33.50536170996516],
      [130.4595995461448, 33.544855556250745],
      [130.462882538066, 33.601845084372286],
      [130.42805960052698, 33.64078513930233],
      [130.37250405783888, 33.67136490606002],
      [130.3165011169015, 33.62439990225258],
      [130.27499075661095, 33.541725286709415],
      [130.28250380798093, 33.45917915761621],
      [130.27456911140396, 33.36249849961814],
      [130.15640560401565, 33.20190803173242],
      [130.09920667600267, 33.09563681654946],
      [130.0429710665315, 32.98965112923126],
      [129.93114313647325, 32.811036609619876],
      [129.8525088922127, 32.758853413152664],
      [129.79170800428622, 32.731212243226906],
      [129.72277143144393, 32.69019420567883],
      [129.69259065031557, 32.64108345024444],
      [129.69446952346073, 32.58309042522376],
      [129.73717794199854, 32.528835632532996],
      [129.79417834662212, 32.530488089961985],
      [129.84544061857648, 32.577861332035724],
      [129.86669508090702, 32.63373969777054],
      [129.87119644926358, 32.70412570192351],
      [129.87119644926358, 32.70412570192351],
      [129.87119644926358, 32.70412570192351],
    ];

    // ----------------------阶段1:从琉球群岛到小仓市

    const target = new PointRoamingAnimationTarget(modelEntity, lineEntity, {
      heading: -Math.PI / 2,
      onBefore: () => {
        modelEntity.show = true;
        if (!context.current.viewer?.trackedEntity) {
          context.current.viewer.trackedEntity = modelEntity;

          const distance = 107953 * 4; // 设置你想要的固定距离
          context.current.viewer.trackedEntity.viewFrom = new Cartesian3(
            distance / 2,
            -distance,
            distance * 1.2
          );
        }
      },
    });
    const track = new AnimationTrack(target, {
      interpolationFn: createPointRoamingSlerp(wayPoints),
    });
    track.addKeyframe(0, start);
    track.addKeyframe(30000, end);

    aniCtr.addTrack(track);
    // ----------------------阶段2:小仓市盘旋一圈，继续往长崎市出发

    // ----------------------阶段3:到达长崎市后投掷原子弹

    // ----------------------阶段4:最后迫降冲绳岛

    return () => {
      viewer?.destroy();
    };
  }, []);

  function play() {
    aniCtr.play();
  }

  function pause() {
    aniCtr.pause();
  }

  function replay() {
    aniCtr.reset();
    play();
  }

  return (
    <MapContainer>
      <div style={{ width: '100%', height: '100%' }} id="map"></div>
      <div>
        <div className="hz-player">
          <Button className="hz-btn" onClick={play}>
            播放
          </Button>
          <Button className="hz-btn" onClick={pause}>
            暂停
          </Button>
          <Button className="hz-btn" onClick={replay}>
            重新播放
          </Button>
        </div>
        <div className="hz-style"></div>
      </div>
    </MapContainer>
  );
}

export default Trace;
